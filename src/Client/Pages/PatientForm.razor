@page "/patients/new"
@page "/patients/edit/{Id}"
@inject IFhirService FhirService
@inject NavigationManager Navigation

<PageTitle>@(IsEdit ? "Edit Patient" : "New Patient")</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="bi bi-person-plus me-2"></i>
                        @(IsEdit ? "Edit Patient" : "New Patient")
                    </h4>
                </div>
                <div class="card-body">
                    @if (isLoading)
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status"></div>
                        </div>
                    }
                    else
                    {
                        <EditForm Model="patient" OnValidSubmit="HandleSubmit">
                            <DataAnnotationsValidator />

                            <div class="mb-3">
                                <label class="form-label">Given Name</label>
                                <InputText @bind-Value="patient.GivenName" class="form-control" />
                                <ValidationMessage For="@(() => patient.GivenName)" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Family Name</label>
                                <InputText @bind-Value="patient.FamilyName" class="form-control" />
                                <ValidationMessage For="@(() => patient.FamilyName)" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Gender</label>
                                <InputSelect @bind-Value="patient.Gender" class="form-select">
                                    <option value="">Select gender...</option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                    <option value="Other">Other</option>
                                    <option value="Unknown">Unknown</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => patient.Gender)" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Date of Birth</label>
                                <InputDate @bind-Value="patient.BirthDate" class="form-control" />
                                <ValidationMessage For="@(() => patient.BirthDate)" />
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Phone Number</label>
                                <InputText @bind-Value="patient.PhoneNumber" class="form-control" placeholder="+1-555-0123" />
                                <ValidationMessage For="@(() => patient.PhoneNumber)" />
                            </div>

                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary" disabled="@isSaving">
                                    @if (isSaving)
                                    {
                                        <span class="spinner-border spinner-border-sm me-1"></span>
                                    }
                                    <i class="bi bi-save me-1"></i>Save
                                </button>
                                <button type="button" class="btn btn-secondary" @onclick="Cancel">
                                    <i class="bi bi-x-circle me-1"></i>Cancel
                                </button>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    private PatientViewModel patient = new();
    private bool isLoading = false;
    private bool isSaving = false;
    private bool IsEdit => !string.IsNullOrEmpty(Id);

    protected override async Task OnInitializedAsync()
    {
        if (IsEdit)
        {
            isLoading = true;
            var existingPatient = await FhirService.GetPatientByIdAsync(Id!);
            if (existingPatient != null)
            {
                patient = existingPatient;
            }
            isLoading = false;
        }
    }

    private async Task HandleSubmit()
    {
        isSaving = true;

        if (IsEdit)
        {
            await FhirService.UpdatePatientAsync(patient);
        }
        else
        {
            await FhirService.CreatePatientAsync(patient);
        }

        isSaving = false;
        Navigation.NavigateTo("/patients");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/patients");
    }
}
